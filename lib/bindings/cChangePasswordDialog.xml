<?xml version="1.0" encoding="utf-8"?>
<bindings xmlns="http://www.mozilla.org/xbl" 
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" 
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
	xmlns:xbl="http://www.mozilla.org/xbl">
	
	<binding id="cChangePasswordDialog" extends="core.wDialog#wDialog">
		<implementation>
			<field name="mMessageInitialized">false</field>
			
			<property name="error">
				<getter><![CDATA[
					return this.getAttribute("error") === "true";
				]]></getter>
				<setter><![CDATA[
					if (val)
					{
						this.setAttribute("error", "true");
					}
					else
					{
						this.removeAttribute("error");
					}
				]]></setter>
			</property>
			
			<property name="oldField" readonly="true">
				<getter><![CDATA[
					return this.getElementById("changepwd_old");
				]]></getter>
			</property>	
			
			<property name="newField" readonly="true">
				<getter><![CDATA[
					return this.getElementById("changepwd_new");
				]]></getter>
			</property>	
			
			<property name="newConfField" readonly="true">
				<getter><![CDATA[
					return this.getElementById("changepwd_newConf");
				]]></getter>
			</property>		
			
			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(600, 300);
					this.error = true;
					try
					{
						var me = this;
						var predicate = function() {return ('internalControl' in me.newConfField) && ('showErrorMessage' in me.getElementById("message-box"));}
						wCore.executeOnPredicate(predicate, function(context) {
							//wCore.debug(wCore.dump(context.parameters));
							context.mMessageInitialized = true;
							context.oldField.internalControl.setAttribute('type', 'password');
							context.newField.internalControl.setAttribute('type', 'password');
							context.newConfField.internalControl.setAttribute('type', 'password');
							context.getElementById('userfullname').value= context.parameters.fullname;
							context.oldField.focus();
						}, me);
					} 
					catch (e)
					{
						wCore.error("cChangePasswordDialog.onInitialize", [], e);
					}
				]]></body>
			</method>		
	
			<method name="showErrorMessage">
				<parameter name="message" />
				<body><![CDATA[
					if (this.mMessageInitialized)
					{
                		this.getElementById("message-box").showErrorMessage(message);
                	}
                ]]></body>
			</method>
				
			<method name="showInformationMessage">
				<parameter name="message" />
				<body><![CDATA[
					if (this.mMessageInitialized)
					{
                		this.getElementById("message-box").showInformationMessage(message);
                	}
                ]]></body>
			</method>
			
			<method name="clearMessage">
				<body><![CDATA[
					if (this.mMessageInitialized)
					{
                		this.getElementById("message-box").clear();
                	}
                ]]></body>
			</method>
			
			<method name="onOk">
				<body><![CDATA[
					var oldPwd = this.oldField.value;
					var newPwd = this.newField.value;
					var newConfPwd = this.newConfField.value;
					var me = this;
					var parameters = {cmpref:this.parameters.id, oldPwd: oldPwd, newPwd: newPwd, newPwdConf: newConfPwd};
					var callBack = function(result) {me.onOkResult(result);};
					wCore.executeJSON('users', "ChangePsswd", parameters, callBack, true);
				]]></body>
			</method>
			
			<method name="onOkResult">
				<parameter name="result" />
				<body><![CDATA[
					if (result.status == 'OK')
					{
						this.oldField.disabled = true;
						this.newField.disabled = true;
						this.newConfField.disabled = true;
						this.showInformationMessage(result.contents.message);
						this.getElementById("okbutton").hidden = true;
					}
					else
					{
						this.showErrorMessage(result.contents.errorMessage);
					}
                ]]></body>
			</method>			
		</implementation>
		
		<handlers>
			<handler event="fieldError"><![CDATA[
				this.error = true;
				this.showErrorMessage(event.originalTarget.errormessage);
			]]></handler>
			
			<handler event="fieldFocus"><![CDATA[
				var field = event.originalTarget;
				if (!field.valid)
				{
					this.showErrorMessage(field.errormessage);
				}
			]]></handler>
						
			<handler event="fieldValidated"><![CDATA[
				this.clearMessage();
				if (this.oldField.valid && this.newField.valid && this.newConfField.valid)
				{
					this.error = false;
				}
			]]></handler>
		</handlers>	
		
		<xbl:content xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" 
			xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xbl="http://www.mozilla.org/xbl">
			<vbox flex="1">
				<hbox class="dialog-header">
					<label value="&amp;modules.users.bo.general.ChangePassword.Title;" class="dialog-title" />
					<spacer flex="1" />
					<vbox pack="center">
						<toolbarbutton height="16" width="16" image="{IconsBase}/small/delete.png" oncommand="onCancel();" tooltiptexts="&amp;modules.uixul.bo.dialog.Cancel;" />
					</vbox>
				</hbox>
				<cmessageinfo anonid="message-box" />	
				<vbox flex="1" style="padding-left:5px;padding-right:5px;">
					<groupbox>
						<caption> 
							<label value="&amp;modules.users.bo.general.ChangePassword.ForUser;" />
							<label anonid="userfullname" />						
						</caption>
						<grid>
							<columns>
								<column />
								<column flex="1"/>
							</columns>
							<rows>
								<row>
									<clabel id="changepwd_old_label" value="&amp;modules.users.bo.general.ChangePassword.OldPassword;" 
										control="changepwd_old">
										<xul:observes element="changepwd_old" attribute="error" />
									</clabel>
									<cfield fieldtype="text" name="old" size="30" id="changepwd_old" anonid="changepwd_old" 
											hidehelp="true" required="true">
									</cfield>
								</row>
								
								<row>
									<clabel id="changepwd_new_label" value="&amp;modules.users.bo.general.ChangePassword.NewPassword;" 
										control="changepwd_new">
										<xul:observes element="changepwd_new" attribute="error" />
									</clabel>
									<cfield fieldtype="text" name="new" size="30" id="changepwd_new" anonid="changepwd_new" 
											hidehelp="true" required="true">
											<cconstraint name="password" parameter="auto" />											
									</cfield>
								</row>	
								
								<row>
									<clabel id="changepwd_newConf_label" value="&amp;modules.users.bo.general.ChangePassword.NewPasswordConfirmation;" 
										control="changepwd_newConf">
										<xul:observes element="changepwd_newConf" attribute="error" />
									</clabel>
									<cfield fieldtype="text" name="newConf" size="30" id="changepwd_newConf" anonid="changepwd_newConf" 
											hidehelp="true" required="true">
											<cconstraint name="password" parameter="auto" />
									</cfield>
								</row>
							</rows>
						</grid>					
					</groupbox>
				</vbox>
				<spacer height="5px" />
				<hbox>
					<button anonid="okbutton" width="100px" image="{IconsBase}/small/check.png" oncommand="onOk();" 
						label="&amp;modules.uixul.bo.dialog.Apply;" xbl:inherits="disabled=error" />
					<spacer flex="1" />
					<button width="100px" image="{IconsBase}/small/delete.png" oncommand="onCancel();" label="&amp;modules.uixul.bo.dialog.Close;" />
				</hbox>
			</vbox>
		</xbl:content>	
	</binding>
</bindings>
